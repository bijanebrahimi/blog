<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Routines Excluded - OpenBSD</title><link href="http://bijanebrahimi.github.io/blog/" rel="alternate"></link><link href="http://bijanebrahimi.github.io/blog/feeds/openbsd.atom.xml" rel="self"></link><id>http://bijanebrahimi.github.io/blog/</id><updated>2018-04-14T15:30:00+04:30</updated><entry><title>Remote Debugging the running OpenBSD kernel</title><link href="http://bijanebrahimi.github.io/blog/remote-debugging-the-running-openbsd-kernel.html" rel="alternate"></link><published>2018-04-14T15:30:00+04:30</published><updated>2018-04-14T15:30:00+04:30</updated><author><name>Bijan</name></author><id>tag:bijanebrahimi.github.io,2018-04-14:/blog/remote-debugging-the-running-openbsd-kernel.html</id><summary type="html">&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;A few month ago, I tried porting the FreeBSD kdb along with it's &lt;a href="https://github.com/freebsd/freebsd/blob/master/sys/gdb/gdb_main.c#L127"&gt;gdb stub&lt;/a&gt;
implementations to OpenBSD as a practice of learning the internals of an
BSD operating system. The ddb code in both FreeBSD and OpenBSD looks
pretty much the same and the &lt;a href="https://sourceware.org/gdb/onlinedocs/gdb/Remote-Protocol.html"&gt;GDB Remote Serial …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;A few month ago, I tried porting the FreeBSD kdb along with it's &lt;a href="https://github.com/freebsd/freebsd/blob/master/sys/gdb/gdb_main.c#L127"&gt;gdb stub&lt;/a&gt;
implementations to OpenBSD as a practice of learning the internals of an
BSD operating system. The ddb code in both FreeBSD and OpenBSD looks
pretty much the same and the &lt;a href="https://sourceware.org/gdb/onlinedocs/gdb/Remote-Protocol.html"&gt;GDB Remote Serial Protocol&lt;/a&gt; looks very minimal.&lt;/p&gt;
&lt;p&gt;But sadly I got very busy and the work is stalled but I'm planning on resuming
the attempt as soon as I get the chance, But there is an alternative way to
&lt;a href="https://markshroyer.com/2013/01/debugging-openbsd-via-qemu/"&gt;Debugging the OpenBSD kernel via QEMU&lt;/a&gt;. What I did below is
basically the same with a few minor changes which I hope to describe it as best.&lt;/p&gt;
&lt;h2&gt;Installing OpenBSD on Qemu&lt;/h2&gt;
&lt;p&gt;For debugging the kernel, we need a working OpenBSD system running on Qemu. I choosed to
create a &lt;code&gt;raw&lt;/code&gt; disk file to be able to easily mount it later via the host and
copy the custom kernel onto it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ qemu-img create -f raw disk.raw 5G
$ qemu-system-x86_64 -m 256M &lt;span class="se"&gt;\&lt;/span&gt;
    -drive &lt;span class="nv"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;raw,file&lt;span class="o"&gt;=&lt;/span&gt;install63.fs &lt;span class="se"&gt;\&lt;/span&gt;
    -drive &lt;span class="nv"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;raw,file&lt;span class="o"&gt;=&lt;/span&gt;disk.raw
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Custom Kernel&lt;/h2&gt;
&lt;p&gt;To debug the kernel, we need a version of the kernel with
debugging symbols and for that we have to recompile it first. The process is
documented at &lt;a href="https://www.openbsd.org/faq/faq5.html"&gt;Building the System from Sourc&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /usr/src
$ &lt;span class="nb"&gt;cd&lt;/span&gt; sys/arch/amd64/conf
$ config GENERIC
$ &lt;span class="nb"&gt;cd&lt;/span&gt; ../compile/GENERIC/
$ make -j 8
$ ls -la obj/bsd&lt;span class="o"&gt;{&lt;/span&gt;,.gdb&lt;span class="o"&gt;}&lt;/span&gt;
-rwxrwx---  &lt;span class="m"&gt;1&lt;/span&gt; root  bijan  &lt;span class="m"&gt;13110110&lt;/span&gt; Apr &lt;span class="m"&gt;14&lt;/span&gt; 10:34 obj/bsd
-rwxrwx---  &lt;span class="m"&gt;1&lt;/span&gt; root  bijan  &lt;span class="m"&gt;55392459&lt;/span&gt; Apr &lt;span class="m"&gt;14&lt;/span&gt; 10:34 obj/bsd.gdb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then we can copy the &lt;code&gt;bsd&lt;/code&gt; kernel to the guest machine and keep the &lt;code&gt;bsd.gdb&lt;/code&gt; on
the host to start the remote debugging via gdb.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vnconfig vnd0 disk.raw
$ disklabel vnd0
&lt;span class="c1"&gt;# /dev/rvnd0c:&lt;/span&gt;
type: ESDI
disk: ESDI/IDE disk
label: QEMU HARDDISK   
duid: 3e97835c8cfa04a4
flags:
bytes/sector: 512
sectors/track: 63
tracks/cylinder: 255
sectors/cylinder: 16065
cylinders: 652
total sectors: 10485760
boundstart: 64
boundend: 10474380
drivedata: &lt;span class="m"&gt;0&lt;/span&gt; 

&lt;span class="m"&gt;16&lt;/span&gt; partitions:
&lt;span class="c1"&gt;#                size           offset  fstype [fsize bsize   cpg]&lt;/span&gt;
  a:         &lt;span class="m"&gt;10474304&lt;/span&gt;               &lt;span class="m"&gt;64&lt;/span&gt;  4.2BSD   &lt;span class="m"&gt;2048&lt;/span&gt; &lt;span class="m"&gt;16384&lt;/span&gt; &lt;span class="m"&gt;12958&lt;/span&gt; 
  c:         &lt;span class="m"&gt;10485760&lt;/span&gt;                &lt;span class="m"&gt;0&lt;/span&gt;  unused                    

$ mount /dev/vnd0a /mnt
$ cp obj/bsd /mnt/bsd
$ umount /mnt
$ vnconfig -u vnd0
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Remote debugging kernel&lt;/h2&gt;
&lt;p&gt;Now it's to time to boot the guest with the new custom kernel. Remember that the
&lt;code&gt;-s&lt;/code&gt; argument enables the gdb server on qemu on &lt;code&gt;localhost&lt;/code&gt; port &lt;code&gt;1234&lt;/code&gt; by default:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ qemu-system-x86_64 -m 256M -s &lt;span class="se"&gt;\&lt;/span&gt;
    -net nic -net user &lt;span class="se"&gt;\&lt;/span&gt;
    -drive &lt;span class="nv"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;raw,file&lt;span class="o"&gt;=&lt;/span&gt;install63.fs &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now to finally attach to the running kernel:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ gdb obj/bsd.gdb
GNU gdb 6.3
Copyright &lt;span class="m"&gt;2004&lt;/span&gt; Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type &lt;span class="s2"&gt;&amp;quot;show copying&amp;quot;&lt;/span&gt; to see the conditions.
There is absolutely no warranty &lt;span class="k"&gt;for&lt;/span&gt; GDB.  Type &lt;span class="s2"&gt;&amp;quot;show warranty&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; details.
This GDB was configured as &lt;span class="s2"&gt;&amp;quot;amd64-unknown-openbsd6.3&amp;quot;&lt;/span&gt;...
&lt;span class="o"&gt;(&lt;/span&gt;gdb&lt;span class="o"&gt;)&lt;/span&gt; target remote :1234
Remote debugging using :1234
&lt;span class="o"&gt;[&lt;/span&gt;New Thread 1&lt;span class="o"&gt;]&lt;/span&gt;
0xffffffff8123bcf5 in broxton_set_cdclk &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0x100, &lt;span class="nv"&gt;frequency&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-2119613816&lt;span class="o"&gt;)&lt;/span&gt;
    at /home/bijan/projects/github.com/openbsd/src/sys/dev/pci/drm/i915/intel_display.c:5569
&lt;span class="m"&gt;5569&lt;/span&gt;                    val &lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; divider&lt;span class="p"&gt;;&lt;/span&gt;
Current language:  auto&lt;span class="p"&gt;;&lt;/span&gt; currently minimal
&lt;span class="o"&gt;(&lt;/span&gt;gdb&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="openbsd"></category><category term="kernel"></category><category term="debugging"></category><category term="gdb"></category><category term="qemu"></category></entry><entry><title>Installing OpenBSD 6.3 on Raspberry pi 3</title><link href="http://bijanebrahimi.github.io/blog/installing-openbsd-63-on-raspberry-pi-3.html" rel="alternate"></link><published>2018-04-08T21:35:00+04:30</published><updated>2018-04-08T21:35:00+04:30</updated><author><name>Bijan</name></author><id>tag:bijanebrahimi.github.io,2018-04-08:/blog/installing-openbsd-63-on-raspberry-pi-3.html</id><summary type="html">&lt;p&gt;Installing the OpenBSD on raspberry pi 3 is very easy and &lt;a href="https://ftp.openbsd.org/pub/OpenBSD/6.3/arm64/INSTALL.arm64"&gt;well documented&lt;/a&gt;
which almost convinced me of not writing about it, but still I felt like it may
help somebody new to the project (But again I really recommend reading the
document if you are interested and have the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Installing the OpenBSD on raspberry pi 3 is very easy and &lt;a href="https://ftp.openbsd.org/pub/OpenBSD/6.3/arm64/INSTALL.arm64"&gt;well documented&lt;/a&gt;
which almost convinced me of not writing about it, but still I felt like it may
help somebody new to the project (But again I really recommend reading the
document if you are interested and have the time).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I'm always running &lt;a href="https://ftp.openbsd.org/pub/OpenBSD/snapshots/arm64"&gt;snapshots&lt;/a&gt; and recommend anybody to do it as
well. But the snapshots links will change to the next version every 6 month, so I
changed the links to the &lt;a href="https://ftp.openbsd.org/pub/OpenBSD/6.3/arm64"&gt;6.3&lt;/a&gt; version to keep the blog post valid over times.
If you're familiar to the OpenBSD &lt;a href="https://www.openbsd.org/faq/faq5.html#Flavors"&gt;flavors&lt;/a&gt;, feel free to use the snapshots
links instead.&lt;/p&gt;
&lt;h2&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Due to the lack of driver, the OpenBSD can not boot directly from the SD Card yet,
So we'll need an USB Stick for the installtion target aside the SD Card for the
U-Boot and installer. Also, a Serial Console connection is required. I Used a
PL2303 USB to Serial (TTL) adapter connected to my Laptop via USB port and
connected to the Raspberry via &lt;strong&gt;TX&lt;/strong&gt;, &lt;strong&gt;RX&lt;/strong&gt; and &lt;strong&gt;GND&lt;/strong&gt; pins.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;For the RaspberryPi, I found the installation process the easiest using the
&lt;a href="https://ftp.openbsd.org/pub/OpenBSD/6.3/arm64/miniroot63.fs"&gt;miniroot&lt;/a&gt; image. It's currently a 20MB filesystem image containing only the
installer script. For installing the base system, atleast the &lt;a href="https://ftp.openbsd.org/pub/OpenBSD/6.3/arm64/bsd.mp"&gt;bsd&lt;/a&gt; kernel
and the &lt;a href="https://ftp.openbsd.org/pub/OpenBSD/6.3/arm64/base63.tgz"&gt;base&lt;/a&gt; file sets are also required. you can choose &lt;a href="https://www.openbsd.org/faq/faq4.html#FilesNeeded"&gt;more file sets&lt;/a&gt;
if you like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ wget https://ftp.openbsd.org/pub/OpenBSD/6.3/arm64/&lt;span class="o"&gt;{&lt;/span&gt;SHA256,SHA256.sig,miniroot63.fs,bsd,bsd.mp,base63.tgz,man63.tgz&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The image and file sets can then be verified according the &lt;a href="https://www.openbsd.org/faq/faq4.html"&gt;faq&lt;/a&gt; using &lt;code&gt;sha256&lt;/code&gt;.
Remember that if you mix the release and snapshot file sets, the checksum will
disagree:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sha256 -C  SHA256 bsd* *.tgz miniroot*.fs
&lt;span class="o"&gt;(&lt;/span&gt;SHA256&lt;span class="o"&gt;)&lt;/span&gt; base63.tgz: OK
&lt;span class="o"&gt;(&lt;/span&gt;SHA256&lt;span class="o"&gt;)&lt;/span&gt; bsd: OK
&lt;span class="o"&gt;(&lt;/span&gt;SHA256&lt;span class="o"&gt;)&lt;/span&gt; bsd.mp: OK
&lt;span class="o"&gt;(&lt;/span&gt;SHA256&lt;span class="o"&gt;)&lt;/span&gt; man63.tgz: OK
&lt;span class="o"&gt;(&lt;/span&gt;SHA256&lt;span class="o"&gt;)&lt;/span&gt; miniroot63.fs: OK
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now to deal with the file sets. the possibilities are to place the file
sets on another USB stick or make them accessible over the local network. I used
python's &lt;code&gt;http.server&lt;/code&gt; module to serve the filesets over http on my Laptop:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ doas python3.6 -m http.server 80
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then, we need to copy the installer
to the SD Card which you of course needs a running operating system for that. Any would
do, and here's mine on OpenBSD with SD Card recognized as the &lt;code&gt;sd1&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ doas dd &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;miniroot63.fs &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/rsd1c &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1m
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now it's time to plug the SD card and the USB Stick to the RaspberryPi3 turn the
power on to let the &lt;code&gt;autoboot&lt;/code&gt; process boot the installer automatically:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cu -dl /dev/ttyU0 -s 115200
Connected to /dev/ttyU0 &lt;span class="o"&gt;(&lt;/span&gt;speed 115200&lt;span class="o"&gt;)&lt;/span&gt;


U-Boot 2018.03 &lt;span class="o"&gt;(&lt;/span&gt;Mar &lt;span class="m"&gt;20&lt;/span&gt; &lt;span class="m"&gt;2018&lt;/span&gt; - 04:28:27 -0600&lt;span class="o"&gt;)&lt;/span&gt;

DRAM:  &lt;span class="m"&gt;948&lt;/span&gt; MiB
RPI &lt;span class="m"&gt;3&lt;/span&gt; Model B &lt;span class="o"&gt;(&lt;/span&gt;0xa02082&lt;span class="o"&gt;)&lt;/span&gt;
MMC:   mmc@7e202000: 0, sdhci@7e300000: 1
Loading Environment from FAT... *** Warning - bad CRC, using default environment

Failed &lt;span class="o"&gt;(&lt;/span&gt;-5&lt;span class="o"&gt;)&lt;/span&gt;
In:    serial
Out:   vidconsole
Err:   vidconsole
Net:   No ethernet found.
starting USB...
USB0:   Core Release: 2.80a
scanning bus &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; devices... &lt;span class="m"&gt;5&lt;/span&gt; USB Device&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; found
       scanning usb &lt;span class="k"&gt;for&lt;/span&gt; storage devices... &lt;span class="m"&gt;1&lt;/span&gt; Storage Device&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt; found
Hit any key to stop autoboot:  &lt;span class="m"&gt;0&lt;/span&gt; 
switch to partitions &lt;span class="c1"&gt;#0, OK&lt;/span&gt;
mmc0 is current device
Scanning mmc 0:1...
Found EFI removable media binary efi/boot/bootaa64.efi
Scanning disk mmc@7e202000.blk...
Card did not respond to voltage &lt;span class="k"&gt;select&lt;/span&gt;!
Scanning disk sdhci@7e300000.blk...
Disk sdhci@7e300000.blk not ready
Scanning disk usb_mass_storage.lun0...
Found &lt;span class="m"&gt;6&lt;/span&gt; disks
&lt;span class="m"&gt;97355&lt;/span&gt; bytes &lt;span class="nb"&gt;read&lt;/span&gt; in &lt;span class="m"&gt;7&lt;/span&gt; ms &lt;span class="o"&gt;(&lt;/span&gt;13.3 MiB/s&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;## Starting EFI application at 01000000 ...&lt;/span&gt;
&amp;gt;&amp;gt; OpenBSD/arm64 BOOTAA64 0.12
boot&amp;gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Thanks to the text based installer, the Installation process is pretty much
identical across architectures, so it's the typical &lt;code&gt;miniroot&lt;/code&gt; installation.
You can configure the the &lt;code&gt;smsc0&lt;/code&gt; Ethernet interface or use a Wifi dongle
to fetch the file stes. I used my local network to fetch the file sets&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Welcome to the OpenBSD/arm64 6.3 installation program.
&lt;span class="o"&gt;(&lt;/span&gt;I&lt;span class="o"&gt;)&lt;/span&gt;nstall, &lt;span class="o"&gt;(&lt;/span&gt;U&lt;span class="o"&gt;)&lt;/span&gt;pgrade, &lt;span class="o"&gt;(&lt;/span&gt;A&lt;span class="o"&gt;)&lt;/span&gt;utoinstall or &lt;span class="o"&gt;(&lt;/span&gt;S&lt;span class="o"&gt;)&lt;/span&gt;hell? 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After Setting root's password and partitioning the USB stick, it's time to install
the sets. Just ensure you checked only sets that you downloaded:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Let&lt;span class="s1"&gt;&amp;#39;s install the sets!&lt;/span&gt;
&lt;span class="s1"&gt;Location of sets? (disk http nfs or &amp;#39;&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;) [disk] http&lt;/span&gt;
&lt;span class="s1"&gt;HTTP proxy URL? (e.g. &amp;#39;&lt;/span&gt;http://proxy:8080&lt;span class="s1"&gt;&amp;#39;, or &amp;#39;&lt;/span&gt;none&lt;span class="s1"&gt;&amp;#39;) [none] &lt;/span&gt;
&lt;span class="s1"&gt;HTTP Server? (hostname, list#, &amp;#39;&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; or &amp;#39;&lt;/span&gt;?&lt;span class="s1"&gt;&amp;#39;) 192.168.10.10&lt;/span&gt;
&lt;span class="s1"&gt;Server directory? [pub/OpenBSD/snapshots/arm64] /&lt;/span&gt;
&lt;span class="s1"&gt;Unable to connect using https. Use http instead? [no] yes&lt;/span&gt;

&lt;span class="s1"&gt;Select sets by entering a set name, a file name pattern or &amp;#39;&lt;/span&gt;all&lt;span class="s1"&gt;&amp;#39;. De-select&lt;/span&gt;
&lt;span class="s1"&gt;sets by prepending a &amp;#39;&lt;/span&gt;-&lt;span class="s1"&gt;&amp;#39;, e.g.: &amp;#39;&lt;/span&gt;-game*&lt;span class="s1"&gt;&amp;#39;. Selected sets are labelled &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;X&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&lt;/span&gt;
&lt;span class="s1"&gt;    [X] bsd           [X] base63.tgz    [X] game63.tgz    [X] xfont63.tgz&lt;/span&gt;
&lt;span class="s1"&gt;    [X] bsd.mp        [X] comp63.tgz    [X] xbase63.tgz   [X] xserv63.tgz&lt;/span&gt;
&lt;span class="s1"&gt;    [X] bsd.rd        [X] man63.tgz     [X] xshare63.tgz&lt;/span&gt;
&lt;span class="s1"&gt;Set name(s)? (or &amp;#39;&lt;/span&gt;abort&lt;span class="s1"&gt;&amp;#39; or &amp;#39;&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; -x* -com* -game* -bsd.rd
    &lt;span class="o"&gt;[&lt;/span&gt;X&lt;span class="o"&gt;]&lt;/span&gt; bsd           &lt;span class="o"&gt;[&lt;/span&gt;X&lt;span class="o"&gt;]&lt;/span&gt; base63.tgz    &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; game63.tgz    &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; xfont63.tgz
    &lt;span class="o"&gt;[&lt;/span&gt;X&lt;span class="o"&gt;]&lt;/span&gt; bsd.mp        &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; comp63.tgz    &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; xbase63.tgz   &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; xserv63.tgz
    &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; bsd.rd        &lt;span class="o"&gt;[&lt;/span&gt;X&lt;span class="o"&gt;]&lt;/span&gt; man63.tgz     &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; xshare63.tgz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The rest is boring. But one important thing is to boot the OpenBSD after installation.
Since the U-Boot by default will prefer the SD Card, We need to
change it on the first boot which is done easily by interrupting the &lt;code&gt;autoboot&lt;/code&gt;
by pressing any key and running the &lt;code&gt;setenv boot_targets usb0 mmc0 dhcp&lt;/code&gt; and then
&lt;code&gt;boot&lt;/code&gt; command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Boot&lt;/span&gt; &lt;span class="mf"&gt;2018.03&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Mar&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="mi"&gt;2018&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mo"&gt;04&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;0600&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nl"&gt;DRAM&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="mi"&gt;948&lt;/span&gt; &lt;span class="n"&gt;MiB&lt;/span&gt;
&lt;span class="n"&gt;RPI&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;Model&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xa02082&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nl"&gt;MMC&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;mmc&lt;/span&gt;&lt;span class="mf"&gt;@7e202000&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sdhci&lt;/span&gt;&lt;span class="mf"&gt;@7e300000&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;Loading&lt;/span&gt; &lt;span class="n"&gt;Environment&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;FAT&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="o"&gt;***&lt;/span&gt; &lt;span class="n"&gt;Warning&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;bad&lt;/span&gt; &lt;span class="n"&gt;CRC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;environment&lt;/span&gt;

&lt;span class="n"&gt;Failed&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nl"&gt;In&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="n"&gt;serial&lt;/span&gt;
&lt;span class="nl"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;vidconsole&lt;/span&gt;
&lt;span class="nl"&gt;Err&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;vidconsole&lt;/span&gt;
&lt;span class="nl"&gt;Net&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;ethernet&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;starting&lt;/span&gt; &lt;span class="n"&gt;USB&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nl"&gt;USB0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;   &lt;span class="n"&gt;Core&lt;/span&gt; &lt;span class="nl"&gt;Release&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;2.80&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;
&lt;span class="n"&gt;scanning&lt;/span&gt; &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;devices&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="n"&gt;USB&lt;/span&gt; &lt;span class="n"&gt;Device&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;
       &lt;span class="n"&gt;scanning&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;storage&lt;/span&gt; &lt;span class="n"&gt;devices&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;Storage&lt;/span&gt; &lt;span class="n"&gt;Device&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;
&lt;span class="n"&gt;Hit&lt;/span&gt; &lt;span class="n"&gt;any&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt; &lt;span class="nl"&gt;autoboot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt; 
&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Boot&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;setenv&lt;/span&gt; &lt;span class="n"&gt;boot_targets&lt;/span&gt; &lt;span class="n"&gt;usb0&lt;/span&gt; &lt;span class="n"&gt;mmc0&lt;/span&gt; &lt;span class="n"&gt;dhcp&lt;/span&gt;
&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Boot&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;boot&lt;/span&gt;

&lt;span class="n"&gt;Device&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nl"&gt;Vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;SanDisk&lt;/span&gt; &lt;span class="nl"&gt;Rev&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.00&lt;/span&gt; &lt;span class="nl"&gt;Prod&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Ultra&lt;/span&gt; &lt;span class="n"&gt;Fit&lt;/span&gt;
            &lt;span class="nl"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Removable&lt;/span&gt; &lt;span class="n"&gt;Hard&lt;/span&gt; &lt;span class="n"&gt;Disk&lt;/span&gt;
            &lt;span class="nl"&gt;Capacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;14663.6&lt;/span&gt; &lt;span class="n"&gt;MB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;14.3&lt;/span&gt; &lt;span class="n"&gt;GB&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30031250&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;512&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt;
&lt;span class="n"&gt;Scanning&lt;/span&gt; &lt;span class="n"&gt;usb&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;
&lt;span class="n"&gt;Found&lt;/span&gt; &lt;span class="n"&gt;EFI&lt;/span&gt; &lt;span class="n"&gt;removable&lt;/span&gt; &lt;span class="n"&gt;media&lt;/span&gt; &lt;span class="n"&gt;binary&lt;/span&gt; &lt;span class="n"&gt;efi&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;boot&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bootaa64&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;efi&lt;/span&gt;
&lt;span class="n"&gt;Scanning&lt;/span&gt; &lt;span class="n"&gt;disk&lt;/span&gt; &lt;span class="n"&gt;mmc&lt;/span&gt;&lt;span class="mf"&gt;@7e202000&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;blk&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Card&lt;/span&gt; &lt;span class="n"&gt;did&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;respond&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;voltage&lt;/span&gt; &lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="n"&gt;Scanning&lt;/span&gt; &lt;span class="n"&gt;disk&lt;/span&gt; &lt;span class="n"&gt;sdhci&lt;/span&gt;&lt;span class="mf"&gt;@7e300000&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;blk&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Disk&lt;/span&gt; &lt;span class="n"&gt;sdhci&lt;/span&gt;&lt;span class="mf"&gt;@7e300000&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;blk&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;ready&lt;/span&gt;
&lt;span class="n"&gt;Scanning&lt;/span&gt; &lt;span class="n"&gt;disk&lt;/span&gt; &lt;span class="n"&gt;usb_mass_storage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lun0&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;Found&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="n"&gt;disks&lt;/span&gt;
&lt;span class="mi"&gt;97355&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt; &lt;span class="n"&gt;ms&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;MiB&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="cp"&gt;## Starting EFI application at 01000000 ...&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;OpenBSD&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;arm64&lt;/span&gt; &lt;span class="n"&gt;BOOTAA64&lt;/span&gt; &lt;span class="mf"&gt;0.12&lt;/span&gt;
&lt;span class="n"&gt;boot&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hope it helps! Cheers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update 2018-04-14&lt;/strong&gt;: And here's the &lt;a href="http://dmesgd.nycbug.org/index.cgi?do=view&amp;amp;id=3566"&gt;dmesg&lt;/a&gt; output which was requested on
&lt;a href="https://www.reddit.com/r/openbsd/comments/8asxq5/installing_openbsd_63_snapshots_on_raspberry_pi_3/dxbw64f/"&gt;reddit&lt;/a&gt;.&lt;/p&gt;</content><category term="openbsd"></category><category term="raspberrypi"></category></entry><entry><title>OpenBSD 6.2 Upgrade</title><link href="http://bijanebrahimi.github.io/blog/openbsd-62-upgrade.html" rel="alternate"></link><published>2017-10-10T22:49:00+03:30</published><updated>2017-10-10T22:49:00+03:30</updated><author><name>Bijan</name></author><id>tag:bijanebrahimi.github.io,2017-10-10:/blog/openbsd-62-upgrade.html</id><summary type="html">&lt;p&gt;The Upgrading Process is stupidly easy. The process is &lt;a href="https://www.openbsd.org/faq/upgrade62.html"&gt;well documented&lt;/a&gt; for each release
and is available after the release of binary packages and when install images are out but
before going any further, please read the OpenBSD 6.2 &lt;a href="4"&gt;new features&lt;/a&gt; for the list of
changes and improvements. &lt;/p&gt;
&lt;p&gt;The …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The Upgrading Process is stupidly easy. The process is &lt;a href="https://www.openbsd.org/faq/upgrade62.html"&gt;well documented&lt;/a&gt; for each release
and is available after the release of binary packages and when install images are out but
before going any further, please read the OpenBSD 6.2 &lt;a href="4"&gt;new features&lt;/a&gt; for the list of
changes and improvements. &lt;/p&gt;
&lt;p&gt;The process is split into two separate processes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First, You should upgrade the base system using one of two possibles. Using a bootable disk
image or using the manual process which is not recommended.&lt;/li&gt;
&lt;li&gt;Second, Upgrading the binary packages.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I choose Upgrading via a bootable media since it is the highly recommended way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;$curl&lt;/span&gt; -o install62.fs https://openbsd.mirror.netelligent.ca/pub/OpenBSD/6.2/amd64/install62.fs
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Writing the image to the USB stick was a matter of executing &lt;code&gt;dd&lt;/code&gt; command (as always):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sysctl hw.disknames
hw.disknames&lt;span class="o"&gt;=&lt;/span&gt;sd0:da0bedc25009303c,cd0:,sd1:9e5b01f8dc3ea3f3
$ doas dd &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;install62.fs &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/rsd1c &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1m
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Again, if you're unfamiliar with anything like OpenBSD way of &lt;a href="https://www.openbsd.org/faq/faq14.html"&gt;dealing with storage devices&lt;/a&gt; and
other things, please consider reading the entire &lt;a href="https://www.openbsd.org/faq/"&gt;FAQ&lt;/a&gt;. It really pays off, I promise ;-)&lt;/p&gt;
&lt;p&gt;Now the next move is follow the pre-upgrade which I actually forgot. For my currect
setup, it was only to manually remove the man pages to avoid having old manpages in
the new system after successfull upgrade:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ doas rm -rf /usr/share/man/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, Just rebooted the machine and booted from the USB stick and Press (U)pgrade and that was it.
After confirming the keyboard layout and my laptop's primary disk where my OpenBSD installation
resides, the process of Upgrading &lt;strong&gt;The Base System&lt;/strong&gt; was done. After completion and rebooting
the machine, the first thing the new OS did was retrieving the newer firmwares which I skipped
since at the time, I had no (reliable) Internet connection, but don't worry, you can do it later:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ uname -a
OpenBSD localhost.lenovo 6.2 GENERIC.MP#134 amd64
$ doas fw_update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, it's time to &lt;strong&gt;update the binary packages&lt;/strong&gt; since their dependencies on the base system has
just been upgraded. But that was just one command away:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ doas pkg_add -u
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That was it. Hope to write more about OpenBSD in the near future.&lt;/p&gt;</content><category term="openbsd"></category><category term="upgrade"></category></entry></feed>